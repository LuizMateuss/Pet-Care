name: Project Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  workflow_run:
    workflows: ["Project Deployment"]
    types:
      - completed
  push:
    branches:
      # - pre-main
      - teste-actions
    paths:
      - 'API/PHP/slim/**'
      - '.github/**'
jobs:
  Deploy-Preview-To-Vercel:
    runs-on: ubuntu-latest
    environment: pre-main
    outputs:
      output1: ${{ steps.step1.outputs.test }}
    steps:
      - uses: actions/checkout@v3

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Install dependencies
        uses: php-actions/composer@v6
        with:
          working_dir: "API/PHP/slim/api"

      - name: Create .env arquive
        run: |
          echo "SGBD=${{ secrets.SGBD }}" >> ./API/PHP/slim/api/.env
          echo "HOST=${{ secrets.HOST }}" >> ./API/PHP/slim/api/.env
          echo "PORT=${{ secrets.PORT }}" >> ./API/PHP/slim/api/.env
          echo "DATABASE=${{ secrets.DATABASE }}" >> ./API/PHP/slim/api/.env
          echo "USER=${{ secrets.USER }}" >> ./API/PHP/slim/api/.env
          echo "PASSWD=${{ secrets.PASSWD }}" >> ./API/PHP/slim/api/.env
          echo "DISPLAY_ERROR=${{ secrets.DISPLAY_ERROR }}" >> ./API/PHP/slim/api/.env

      - name: Pull Vercel Environment Information
        working-directory: ./API/PHP/slim
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        working-directory: ./API/PHP/slim
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        working-directory: ./API/PHP/slim
        id: step1
        run: |
          vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} > deployment-url.txt
          code=$?
          if [ $code -eq 0 ]; then
              deploymentUrl=`cat deployment-url.txt`
          else
              errorMessage=`cat error.txt`
              echo "There was an error: $errorMessage"
          fi
          echo "test=$deploymentUrl" >> "$GITHUB_OUTPUT"